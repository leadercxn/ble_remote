/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Fri Apr 03 23:48:13 2020. */

#ifndef PB_FAC_FACCFG_PB_H_INCLUDED
#define PB_FAC_FACCFG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _fac_DeviceType {
    fac_DeviceType_NODE = 0,
    fac_DeviceType_MODULE = 1,
    fac_DeviceType_CHIP = 2,
    fac_DeviceType_CO = 3,
    fac_DeviceType_CO2 = 4,
    fac_DeviceType_NO2 = 5,
    fac_DeviceType_CH4 = 6,
    fac_DeviceType_LPG = 7,
    fac_DeviceType_PM2_5 = 8,
    fac_DeviceType_PM10 = 9,
    fac_DeviceType_GPS = 10,
    fac_DeviceType_TEMP = 11,
    fac_DeviceType_HUMI = 12,
    fac_DeviceType_TRACKER = 13,
    fac_DeviceType_chip_s = 14,
    fac_DeviceType_chip_e = 15,
    fac_DeviceType_chip_l = 16,
    fac_DeviceType_tester = 17,
    fac_DeviceType_temp_humi_one = 18,
    fac_DeviceType_fhsj_ch4 = 19,
    fac_DeviceType_fhsj_lpg = 20,
    fac_DeviceType_fhsj_elec_fires = 21,
    fac_DeviceType_fhsj_smoke = 22,
    fac_DeviceType_tk = 23,
    fac_DeviceType_concox_tracker = 24,
    fac_DeviceType_jf_connection = 25,
    fac_DeviceType_siter_lpg = 26,
    fac_DeviceType_mantun_fires = 27,
    fac_DeviceType_acrel_fires = 28,
    fac_DeviceType_taycan_smoke = 29,
    fac_DeviceType_bigbang_tracker = 30,
    fac_DeviceType_t1 = 31,
    fac_DeviceType_acrel_single = 32,
    fac_DeviceType_baymax_ch4 = 33,
    fac_DeviceType_baymax_lpg = 34,
    fac_DeviceType_sss_controller = 35,
    fac_DeviceType_jetfire_water_soak = 47
} fac_DeviceType;
#define _fac_DeviceType_MIN fac_DeviceType_NODE
#define _fac_DeviceType_MAX fac_DeviceType_jetfire_water_soak
#define _fac_DeviceType_ARRAYSIZE ((fac_DeviceType)(fac_DeviceType_jetfire_water_soak+1))

typedef enum _fac_SlotType {
    fac_SlotType_SLOT_NONE = 0,
    fac_SlotType_SLOT_IBEACON = 1,
    fac_SlotType_SLOT_EDDYSTONE_UID = 2,
    fac_SlotType_SLOT_EDDYSTONE_URL = 3,
    fac_SlotType_SLOT_EDDYSTONE_TLM = 4,
    fac_SlotType_SLOT_EDDYSTONE_EID = 5,
    fac_SlotType_SLOT_CUSTOME = 6,
    fac_SlotType_SLOT_SENSOR = 7
} fac_SlotType;
#define _fac_SlotType_MIN fac_SlotType_SLOT_NONE
#define _fac_SlotType_MAX fac_SlotType_SLOT_SENSOR
#define _fac_SlotType_ARRAYSIZE ((fac_SlotType)(fac_SlotType_SLOT_SENSOR+1))

/* Struct definitions */
typedef struct _fac_Alarm {
    fac_DeviceType type;
    bool has_alarmHigh;
    float alarmHigh;
    bool has_alarmLow;
    float alarmLow;
/* @@protoc_insertion_point(struct:fac_Alarm) */
} fac_Alarm;

typedef PB_BYTES_ARRAY_T(16) fac_Slot_frame_t;
typedef struct _fac_Slot {
    bool has_index;
    uint32_t index;
    bool has_type;
    fac_SlotType type;
    bool has_active;
    bool active;
    bool has_frame;
    fac_Slot_frame_t frame;
/* @@protoc_insertion_point(struct:fac_Slot) */
} fac_Slot;

typedef PB_BYTES_ARRAY_T(8) fac_Config_appSn_t;
typedef PB_BYTES_ARRAY_T(16) fac_Config_appToken_t;
typedef PB_BYTES_ARRAY_T(16) fac_Config_appHardwareversion_t;
typedef PB_BYTES_ARRAY_T(16) fac_Config_appSecureKey_t;
typedef PB_BYTES_ARRAY_T(16) fac_Config_appPassword_t;
typedef struct _fac_Config {
    fac_DeviceType appDeviceType;
    fac_Config_appSn_t appSn;
    fac_Config_appToken_t appToken;
    fac_Config_appHardwareversion_t appHardwareversion;
    fac_Config_appSecureKey_t appSecureKey;
    fac_Config_appPassword_t appPassword;
    uint32_t appInterval;
    bool has_appBleOnTime;
    uint32_t appBleOnTime;
    bool has_appBleOffTime;
    uint32_t appBleOffTime;
    int32_t appBleTxPower;
    float appBleInterval;
    pb_size_t appSlots_count;
    fac_Slot appSlots[1];
    pb_size_t appAlarms_count;
    fac_Alarm appAlarms[1];
    bool has_appAlarmReportIntervalAcked;
    uint32_t appAlarmReportIntervalAcked;
    bool has_appAlarmReportIntervalUnacked;
    uint32_t appAlarmReportIntervalUnacked;
    bool has_appBleFnt;
    uint32_t appBleFnt;
    bool has_appLowPowerLevel;
    uint32_t appLowPowerLevel;
/* @@protoc_insertion_point(struct:fac_Config) */
} fac_Config;

/* Default values for struct fields */

/* Initializer values for message structs */
#define fac_Slot_init_default                    {false, 0, false, _fac_SlotType_MIN, false, 0, false, {0, {0}}}
#define fac_Alarm_init_default                   {_fac_DeviceType_MIN, false, 0, false, 0}
#define fac_Config_init_default                  {_fac_DeviceType_MIN, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, 0, false, 0, false, 0, 0, 0, 0, {fac_Slot_init_default}, 0, {fac_Alarm_init_default}, false, 0, false, 0, false, 0, false, 0}
#define fac_Slot_init_zero                       {false, 0, false, _fac_SlotType_MIN, false, 0, false, {0, {0}}}
#define fac_Alarm_init_zero                      {_fac_DeviceType_MIN, false, 0, false, 0}
#define fac_Config_init_zero                     {_fac_DeviceType_MIN, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, 0, false, 0, false, 0, 0, 0, 0, {fac_Slot_init_zero}, 0, {fac_Alarm_init_zero}, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define fac_Alarm_type_tag                       1
#define fac_Alarm_alarmHigh_tag                  2
#define fac_Alarm_alarmLow_tag                   3
#define fac_Slot_index_tag                       1
#define fac_Slot_type_tag                        2
#define fac_Slot_active_tag                      3
#define fac_Slot_frame_tag                       4
#define fac_Config_appDeviceType_tag             100
#define fac_Config_appSn_tag                     101
#define fac_Config_appToken_tag                  102
#define fac_Config_appHardwareversion_tag        103
#define fac_Config_appSecureKey_tag              104
#define fac_Config_appPassword_tag               105
#define fac_Config_appInterval_tag               106
#define fac_Config_appBleOnTime_tag              107
#define fac_Config_appBleOffTime_tag             108
#define fac_Config_appBleTxPower_tag             109
#define fac_Config_appBleInterval_tag            110
#define fac_Config_appSlots_tag                  111
#define fac_Config_appAlarms_tag                 112
#define fac_Config_appAlarmReportIntervalAcked_tag 114
#define fac_Config_appAlarmReportIntervalUnacked_tag 115
#define fac_Config_appBleFnt_tag                 200
#define fac_Config_appLowPowerLevel_tag          201

/* Struct field encoding specification for nanopb */
extern const pb_field_t fac_Slot_fields[5];
extern const pb_field_t fac_Alarm_fields[4];
extern const pb_field_t fac_Config_fields[18];

/* Maximum encoded size of messages (where known) */
#define fac_Slot_size                            28
#define fac_Alarm_size                           12
#define fac_Config_size                          200

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FACCFG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
